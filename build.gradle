import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.0'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "11"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

group 'com.service'
version '1.0.0'

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src/main/kotlin']
    test.kotlin.srcDirs = test.java.srcDirs = ['src/test/kotlin']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-server-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-jackson:$ktor_version"
    implementation 'junit:junit:4.13.1'
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.1"
    implementation "com.microsoft.playwright:playwright:1.39.0"
    implementation 'com.github.blocoio:faker:2.0.1'
    implementation "it.sauronsoftware.cron4j:cron4j:2.2.5"
    implementation "com.sksamuel.hoplite:hoplite-core:2.7.5"
    runtimeOnly "com.sksamuel.hoplite:hoplite-yaml:2.7.5"
    testImplementation "com.willowtreeapps.assertk:assertk-jvm:0.24"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    testImplementation "org.mockito:mockito-inline:3.11.2"
    testImplementation "org.assertj:assertj-core:3.23.1"
}

tasks.jar {
    configurations["compileClasspath"].forEach {
                from(zipTree(it.absoluteFile))
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Version file generation
def generatedVersionDir = "${buildDir}/generated-version" as Object

sourceSets {
    main {
        output.dir(generatedVersionDir, builtBy: 'generateVersionProperties')
    }
}

task generateVersionProperties {
    doLast {
        def propertiesFile = file "$generatedVersionDir/version.properties"
        propertiesFile.parentFile.mkdirs()
        def properties = new Properties()
        properties.setProperty("version", rootProject.version.toString())
        propertiesFile.withWriter { properties.store(it, null) }
    }
}

test {
    useJUnitPlatform()
}

processResources.dependsOn generateVersionProperties

shadowJar {
    mainClassName = 'com.service.infrastructure.http.Application'
    classifier = 'fat'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'Application'
        )
    }
}